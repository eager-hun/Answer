/**
 * @file
 * Layout rules. As I observe, layouts can be thought of as modules as well.
 *
 * @see
 * https://github.com/at-import/Singularity/wiki
 * http://snugug.github.io/RWD-with-Sass-Compass/#/interesting-grids
 * http://snugug.github.io/RWD-with-Sass-Compass/#/nested-grid-html
 */

.block {
  margin-bottom: $layout-pad*2;

  &:last-child {
    margin-bottom: 0;
  }
}
.sidebar .block {
  margin-bottom: $layout-pad*1.5;

  &:last-child {
    margin-bottom: 0;
  }
}
.column {
  // Same as the sidebar block margin.
  margin-bottom: $layout-pad*1.5;
}
.sidebar:last-child {
  margin-bottom: $layout-pad*2;
}

@include breakpoint($bkp-multi-min) {
  .column {
    margin-bottom: $layout-pad*2;
  }
}


// #############################################################################
// Setting up grids.

// @include sgs-change('debug', true); // The grid-bg-displays depend on this.

.grid {
  @include n-clearfix;

  list-style-type: none; // In case we gridify a list.

  // .block { background: rgba(black,0.1); } // For debugging;
}


// #############################################################################
// .layout--2sb: a layout with 2 sidebars.

// This layout is used (best) for the primary layout of a page.

// There are three sets of settings here: one for a symmetric arrangement, and
// two others for grouping both the sidebars onto the left or right side
// correspondingly.

// NOTE:
// The arrangements you don't use should be commented out in order to not weigh
// down the generated .css file.

// -----------------------------------------------------------------------------
// Default arrangement is a symmetric one: .main_content is in the center,
// sidebars surround it from each side.

// SYMMETRIC: There is one sidebar: .sidebar_1
.layout--2sb.symmetric.has-1-sb.sb-1 {
  @include add-grid(6 18 at $bkp-multi-min);
  @include add-gutter(0 at $bkp-multi-min);
  @include background-grid;
}
.layout--2sb.symmetric.has-1-sb.sb-1 {
  @include breakpoint($bkp-multi-min) {
    & > .main_content {
      @include grid-span(1, 2);

      padding-left: 6%;
      padding-right: 6%;
    }
    & > .sidebar_1 {
      @include grid-span(1, 1);
    }
  }
}
// SYMMETRIC: There is one sidebar: .sidebar_2
.layout--2sb.symmetric.has-1-sb.sb-2 {
  @include add-grid(18 6 at $bkp-multi-min);
  @include add-gutter(0 at $bkp-multi-min);
  @include background-grid;
}
.layout--2sb.symmetric.has-1-sb.sb-2 {
  @include breakpoint($bkp-multi-min) {
    & > .main_content {
      @include grid-span(1, 1);

      padding-left: 6%;
      padding-right: 6%;
    }
    & > .sidebar_2 {
      @include grid-span(1, 2);

      margin-bottom: $layout-pad*2;
    }
  }
}
// SYMMETRIC: Present on the page: both sidebars.
.layout--2sb.symmetric.has-2-sb {
  @include add-grid(6 18 at $bkp-multi-min);
  @include add-gutter(0 at $bkp-multi-min);
  @include add-grid(6 12 6 at $bkp-multi-ht-min);
  @include add-gutter(1 at $bkp-multi-ht-min);
  @include background-grid;
}
.layout--2sb.symmetric.has-2-sb {
  @include breakpoint($bkp-multi-min) {
    & > .main_content {
      @include grid-span(1, 2);

      padding-left: 6%;
      padding-right: 6%;
    }
    & > .sidebar_1 {
      @include grid-span(1, 1);
    }
    & > .sidebar_2 {
      clear: both;
    }
  }
  @include breakpoint($bkp-multi-ht-min) {
    & > .main_content {
      @include grid-span(1, 2);

      padding-left: 0;
      padding-right: 0;
    }
    & > .sidebar_1 {
      @include grid-span(1, 1);
    }
    & > .sidebar_2 {
      @include grid-span(1, 3);
    }
  }
}

// -----------------------------------------------------------------------------
// .layout_2sb variant: &.content-left

// CONTENT-LEFT: There is one sidebar.
.layout--2sb.content-left.has-1-sb {
  @include add-grid(18 6 at $bkp-multi-min);
  @include add-gutter(0 at $bkp-multi-min);
  @include background-grid;
}
.layout--2sb.content-left.has-1-sb {
  @include breakpoint($bkp-multi-min) {
    & > .main_content {
      @include grid-span(1, 1);

      padding-left: 6%;
      padding-right: 6%;
    }
    & > .sidebar {
      @include grid-span(1, 2);
    }
  }
}
// CONTENT-LEFT: Present on the page: both sidebars.
.layout--2sb.content-left.has-2-sb {
  @include add-grid(18 6 at $bkp-multi-min);
  @include add-gutter(0 at $bkp-multi-min);
  @include add-grid(12 6 6 at $bkp-multi-ht-min);
  @include add-gutter(1 at $bkp-multi-ht-min);
  @include background-grid;
}
.layout--2sb.content-left.has-2-sb {
  @include breakpoint($bkp-multi-min) {
    & > .main_content {
      @include grid-span(1, 1);

      padding-left: 6%;
      padding-right: 6%;
    }
    & > .sidebar_1 {
      @include grid-span(1, 2);
    }
    & > .sidebar_2 {
      clear: both;
    }
  }
  @include breakpoint($bkp-multi-ht-min) {
    & > .main_content {
      @include grid-span(1, 1);

      padding-left: 3.85%;
      padding-right: 0;
    }
    & > .sidebar_1 {
      @include grid-span(1, 2);
    }
    & > .sidebar_2 {
      @include grid-span(1, 3);
    }
  }
}

// -----------------------------------------------------------------------------
// .layout_2sb variant: &.content-right

// CONTENT-RIGHT: There is one sidebar.
.layout--2sb.content-right.has-1-sb {
  @include add-grid(6 18 at $bkp-multi-min);
  @include add-gutter(0 at $bkp-multi-min);
  @include background-grid;
}
.layout--2sb.content-right.has-1-sb {
  @include breakpoint($bkp-multi-min) {
    & > .main_content {
      @include grid-span(1, 2);

      padding-left: 6%;
      padding-right: 6%;
    }
    & > .sidebar {
      @include grid-span(1, 1);
    }
  }
}
// CONTENT-RIGHT: Present on the page: both sidebars.
.layout--2sb.content-right.has-2-sb {
  @include add-grid(6 18 at $bkp-multi-min);
  @include add-gutter(0 at $bkp-multi-min);
  @include add-grid(6 6 12 at $bkp-multi-ht-min);
  @include add-gutter(1 at $bkp-multi-ht-min);
  @include background-grid;
}
.layout--2sb.content-right.has-2-sb {
  @include breakpoint($bkp-multi-min) {
    & > .main_content {
      @include grid-span(1, 2);

      padding-left: 6%;
      padding-right: 6%;
    }
    & > .sidebar_1 {
      @include grid-span(1, 1);
    }
    & > .sidebar_2 {
      clear: both;
    }
  }
  @include breakpoint($bkp-multi-ht-min) {
    & > .main_content {
      @include grid-span(1, 3);

      padding-left: 0;
      padding-right: 3.85%;
    }
    & > .sidebar_1 {
      @include grid-span(1, 1);
    }
    & > .sidebar_2 {
      @include grid-span(1, 2);
    }
  }
}


// #############################################################################
// .layout--landing_1

.layout--landing_1 {
  @include add-grid(6 18 at $bkp-multi-min);
  @include add-gutter(0 at $bkp-multi-min);
  @include add-grid(5 19 at $bkp-multi-ht-min);
  @include add-gutter(0 at $bkp-multi-ht-min);
  @include background-grid;
}
.layout--landing_1 {
  .column--main {
    .grid-item {
      margin-bottom: 2em;
    }
  }
  @include breakpoint($bkp-multi-min) {
    .sidebar {
      @include grid-span(1, 1);
    }
    .column--main {
      @include grid-span(1, 2);

      padding-left: 6%;
      padding-right: 6%;
    }
  }
  @include breakpoint($bkp-multi-ht-min) {
    .sidebar {
      @include grid-span(1, 1);
    }
    .column--main {
      @include grid-span(1, 2);

      .grid-item {
        margin-bottom: 0;
      }
    }
    @include layout(8) {
      @include layout($gutter: 2) { // FIXME: this gutter behaves unexpectedly.
        .slot--major_1 {
          @include grid-span(3, 1);
        }
        .slot--major_2 {
          @include grid-span(5, 4);
        }
      }
    }
  }
}


// #############################################################################
// Splitters.

@include breakpoint($bkp-multi-mt-min) {
  .splitter {
    margin-left: -4%;
    margin-right: -4%;

    .table {
      display: table;
      table-layout: fixed;
      width: 100%;
    }
    .cell {
      display: table-cell;
      padding-left: 4%;
      padding-right: 4%;
    }
    &.box {
      margin-left: 0;
      margin-right: 0;
    }
  }
}
