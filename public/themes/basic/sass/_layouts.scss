/**
 * @file
 * Layouts.
 */

.box {
  @include box();
}

.tpl--block {
  margin-bottom: $layout-pad*2;

  &:last-child {
    margin-bottom: 0;
  }
}
.col--sidebar .tpl--block {
  margin-bottom: $layout-pad*1.5;

  &:last-child {
    margin-bottom: 0;
  }
}
.column {
  // Same as the sidebar block margin.
  margin-bottom: $layout-pad*1.5;
}


// #############################################################################
// Layouts.

/**
 * @see
 * https://github.com/at-import/Singularity/wiki
 * http://snugug.github.io/RWD-with-Sass-Compass/#/interesting-grids
 * http://snugug.github.io/RWD-with-Sass-Compass/#/nested-grid-html
 * http://stackoverflow.com/a/24092721 (syntax-change)
 */


// #############################################################################
// Setting up grids.

// @include sgs-change('debug', true); // The grid-bg-displays depend on this.

.grid {
  @include n-clearfix;

  list-style-type: none; // In case we gridify a list.

  // .tpl--block { background: rgba(black,0.1); } // For debugging;
}


// #############################################################################
// .l--2sb: a layout with 2 sidebars.

// .l--2sb debug helper.
.binder--single_mock_page {
  .l--2sb {
    margin-bottom: 0.5em;

    .col--main {
      background: rgba(dodgerblue, 0.3);
    }
    .col--sb_1 {
      background: rgba(red, 0.3);
    }
    .col--sb_2 {
      background: rgba(lime, 0.4);
    }
    .dummy-content {
      // background: rgba(#000, 0.2);
      // border: 1px solid white;
      // margin: 1em 0;
      min-height: 100px;
    }
  }
}

// This layout is used (best) for the primary layout of a page.

// There are three sets of settings here: one for a symmetric arrangement, and
// two others for grouping both the sidebars onto the left or right side
// correspondingly.

// NOTE:
// The arrangements you don't use should be commented out in order to not weigh
// down the generated .css file.

// -----------------------------------------------------------------------------
// Default arrangement is a symmetric one: .col--main is in the center,
// sidebars surround it from each side.

// CONTENT-IN-MID: There is one sidebar: .col--sb_1
.l--2sb.content-in-mid.has-1-sb.sb-1 {
  @include add-grid(6 18 at $bkp-wide-min);
  @include add-gutter(1.7 at $bkp-wide-min);
  @include background-grid;
}
.l--2sb.content-in-mid.has-1-sb.sb-1 {
  @include breakpoint($bkp-wide-min) {
    & > .col--main {
      @include grid-span(1, 2);
    }
    & > .col--sb_1 {
      @include grid-span(1, 1);
    }
    & > .column {
      margin-bottom: 0;
    }
  }
}
// CONTENT-IN-MID: There is one sidebar: .col--sb_2
.l--2sb.content-in-mid.has-1-sb.sb-2 {
  @include add-grid(18 6 at $bkp-wide-min);
  @include add-gutter(1.7 at $bkp-wide-min);
  // @include background-grid;
}
.l--2sb.content-in-mid.has-1-sb.sb-2 {
  @include breakpoint($bkp-wide-min) {
    & > .col--main {
      @include grid-span(1, 1);
    }
    & > .col--sb_2 {
      @include grid-span(1, 2);
    }
    & > .column {
      margin-bottom: 0;
    }
  }
}
// CONTENT-IN-MID: Present on the page: both sidebars.
.l--2sb.content-in-mid.has-2-sb {
  @include add-grid(6 18 at $bkp-wide-min);
  @include add-gutter(1.7 at $bkp-wide-min);
  @include add-grid(6 12 6 at $bkp-wide-ht-min);
  @include add-gutter(0.85 at $bkp-wide-ht-min);
  // @include background-grid;
}
.l--2sb.content-in-mid.has-2-sb {
  @include breakpoint($bkp-wide-min) {
    & > .col--main {
      @include grid-span(1, 2);

      margin-bottom: 8%;
    }
    & > .col--sb_1 {
      @include grid-span(1, 1);

      margin-bottom: 8%;
    }
    & > .col--sb_2 {
      clear: both;
    }
  }
  @include breakpoint($bkp-wide-ht-min) {
    & > .col--main {
      @include grid-span(1, 2);
    }
    & > .col--sb_1 {
      @include grid-span(1, 1);
    }
    & > .col--sb_2 {
      @include grid-span(1, 3);
    }
    & > .column {
      margin-bottom: 0;
    }
  }
}

// -----------------------------------------------------------------------------
// .layout_2sb variant: &.content-on-left

// CONTENT-LEFT: There is one sidebar.
.l--2sb.content-on-left.has-1-sb {
  @include add-grid(18 6 at $bkp-wide-min);
  @include add-gutter(1.7 at $bkp-wide-min);
  // @include background-grid;
}
.l--2sb.content-on-left.has-1-sb {
  @include breakpoint($bkp-wide-min) {
    & > .col--main {
      @include grid-span(1, 1);
    }
    & > .col--sidebar {
      @include grid-span(1, 2);
    }
    & > .column {
      margin-bottom: 0;
    }
  }
}
// CONTENT-LEFT: Present on the page: both sidebars.
.l--2sb.content-on-left.has-2-sb {
  @include add-grid(18 6 at $bkp-wide-min);
  @include add-gutter(1.7 at $bkp-wide-min);
  @include add-grid(12 6 6 at $bkp-wide-ht-min);
  @include add-gutter(0.85 at $bkp-wide-ht-min);
  // @include background-grid;
}
.l--2sb.content-on-left.has-2-sb {
  @include breakpoint($bkp-wide-min) {
    & > .col--main {
      @include grid-span(1, 1);

      margin-bottom: 8%;
    }
    & > .col--sb_1 {
      @include grid-span(1, 2);

      margin-bottom: 8%;
    }
    & > .col--sb_2 {
      clear: both;
    }
  }
  @include breakpoint($bkp-wide-ht-min) {
    & > .col--main {
      @include grid-span(1, 1);
    }
    & > .col--sb_1 {
      @include grid-span(1, 2);
    }
    & > .col--sb_2 {
      @include grid-span(1, 3);
    }
    & > .column {
      margin-bottom: 0;
    }
  }
}

// -----------------------------------------------------------------------------
// .layout_2sb variant: &.content-on-right

// CONTENT-RIGHT: There is one sidebar.
.l--2sb.content-on-right.has-1-sb {
  @include add-grid(6 18 at $bkp-wide-min);
  @include add-gutter(1.7 at $bkp-wide-min);
  // @include background-grid;
}
.l--2sb.content-on-right.has-1-sb {
  @include breakpoint($bkp-wide-min) {
    & > .col--main {
      @include grid-span(1, 2);
    }
    & > .col--sidebar {
      @include grid-span(1, 1);
    }
    & > .column {
      margin-bottom: 0;
    }
  }
}
// CONTENT-RIGHT: Present on the page: both sidebars.
.l--2sb.content-on-right.has-2-sb {
  @include add-grid(6 18 at $bkp-wide-min);
  @include add-gutter(1.7 at $bkp-wide-min);
  @include add-grid(6 6 12 at $bkp-wide-ht-min);
  @include add-gutter(0.85 at $bkp-wide-ht-min);
  // @include background-grid;
}
.l--2sb.content-on-right.has-2-sb {
  @include breakpoint($bkp-wide-min) {
    & > .col--main {
      @include grid-span(1, 2);

      margin-bottom: 8%;
    }
    & > .col--sb_1 {
      @include grid-span(1, 1);

      margin-bottom: 8%;
    }
    & > .col--sb_2 {
      clear: both;
    }
  }
  @include breakpoint($bkp-wide-ht-min) {
    & > .col--main {
      @include grid-span(1, 3);
    }
    & > .col--sb_1 {
      @include grid-span(1, 1);
    }
    & > .col--sb_2 {
      @include grid-span(1, 2);
    }
    & > .column {
      margin-bottom: 0;
    }
  }
}


// #############################################################################
// Grids.

// Shared styles of all .l--matrix variants.
.l--matrix {
  text-align: center;

  & > .item {
    @include transition-property(all);
    @include transition-duration($transitspeed-mid);

    display: inline-block;
    margin-bottom: $layout-pad*1.5;
    max-width: 100%;

    &:last-child {
      margin-bottom: 0;
    }
  }

}

.l--matrix--cols-3 {
  @include add-grid(2 at $bkp-narrow-ht-min);
  @include add-gutter(0.1 at $bkp-narrow-ht-min);
  @include add-grid(3 at $bkp-wide-ht-min);
  @include add-gutter(0.1 at $bkp-wide-ht-min);

  @include breakpoint($bkp-narrow-ht-min) {
    & > .item {
      display: block;
    }
  }

  // Two-col grid when wide enough.
  @include breakpoint($bkp-narrow-ht-min $bkp-wide-mt-max) {
    & > .item:nth-child(2n+1) {
      @include grid-span(1, 1);

      clear: left;
    }
    & > .item:nth-child(2n+2) {
      @include grid-span(1, 2);
    }
    // Note: the first one had its bottom margin: 0 at the basic definition.
    & > .item:nth-last-child(2) {
      margin-bottom: 0;
    }
  }
  // Three-col grid when wide enough.
  @include breakpoint($bkp-wide-ht-min) {
    & > .item:nth-child(3n+1) {
      @include grid-span(1, 1);

      clear: left;
    }
    & > .item:nth-child(3n+2) {
      @include grid-span(1, 2);
    }
    & > .item:nth-child(3n+3) {
      @include grid-span(1, 3);
    }
    // Note: the first one had its bottom margin: 0 at the basic definition.
    & > .item:nth-last-child(2),
    & > .item:nth-last-child(3) {
      margin-bottom: 0;
    }
  }
}

.l--matrix--cols-4 {
  @include add-grid(2 at $bkp-narrow-mt-min);
  @include add-gutter(0.1 at $bkp-narrow-mt-min);
  @include add-grid(3 at $bkp-wide-min);
  @include add-gutter(0.1 at $bkp-wide-min);
  @include add-grid(4 at $bkp-wide-ht-min);
  @include add-gutter(0.1 at $bkp-wide-ht-min);

  @include breakpoint($bkp-narrow-mt-min) {
    & > .item {
      display: block;
    }
  }

  // Two-col grid when wide enough.
  @include breakpoint($bkp-narrow-mt-min $bkp-narrow-max) {
    & > .item:nth-child(2n+1) {
      @include grid-span(1, 1);

      clear: left;
    }
    & > .item:nth-child(2n+2) {
      @include grid-span(1, 2);
    }
    // Note: the first one had its bottom margin: 0 at the basic definition.
    & > .item:nth-last-child(2) {
      margin-bottom: 0;
    }
  }
  // Three-col grid when wide enough.
  @include breakpoint($bkp-wide-min $bkp-wide-mt-max) {
    & > .item:nth-child(3n+1) {
      @include grid-span(1, 1);

      clear: left;
    }
    & > .item:nth-child(3n+2) {
      @include grid-span(1, 2);
    }
    & > .item:nth-child(3n+3) {
      @include grid-span(1, 3);
    }
    // Note: the first one had its bottom margin: 0 at the basic definition.
    & > .item:nth-last-child(2),
    & > .item:nth-last-child(3) {
      margin-bottom: 0;
    }
  }
  // Four-col grid when wide enough.
  @include breakpoint($bkp-wide-ht-min) {
    & > .item:nth-child(4n+1) {
      @include grid-span(1, 1);

      clear: left;
    }
    & > .item:nth-child(4n+2) {
      @include grid-span(1, 2);
    }
    & > .item:nth-child(4n+3) {
      @include grid-span(1, 3);
    }
    & > .item:nth-child(4n+4) {
      @include grid-span(1, 4);
    }
    // Note: the first one had its bottom margin: 0 at the basic definition.
    & > .item:nth-last-child(2),
    & > .item:nth-last-child(3)
    & > .item:nth-last-child(4) {
      margin-bottom: 0;
    }
  }
}


// #############################################################################
// Splitters.

.splitter > .item {
  margin-top: $layout-pad;
  margin-bottom: $layout-pad;
}

@include breakpoint($bkp-wide-mt-min) {
  .splitter__fit {
    overflow-x: hidden;
  }
  .splitter__wrap {
    margin-left: -$layout-pad*2;
    margin-right: -$layout-pad*2;
  }
  .splitter {
    display: table;
    table-layout: fixed;
    width: 100%;

    & > .item {
      display: table-cell;
      margin: 0;
      padding-left: $layout-pad*2;
      padding-right: $layout-pad*2;
    }
  }
}

