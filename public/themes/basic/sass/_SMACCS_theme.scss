/**
 * @file
 * Theme styles.
 */


// #############################################################################
// Themeing base level items.

html {
  font-family: $font-sans-1;
}
body {
  background: color(bg);
  color: color(text);
}
::selection {
  background: color(prim);
  color: color(text-invert);
}
::-moz-selection {
  background: color(prim);
  color: color(text-invert);
}
h1,h2,h3,h4,h5,h6 {
  color: lighten(color(text), 10%);
}
h2,h3,h4,h5,h6 {
  margin-top: 1.2em;
}
h2 {
  font-weight: normal;
  margin-bottom: 0.6em;
}
a {
  // Basic order of styling: :link, :visited, :hover, :active .
  // See http://meyerweb.com/eric/css/link-specificity.html .

  @include transition-color;

  text-decoration: none;

  &,
  &:visited {
    color: color(link);
  }
  &:focus {
    border-bottom: 1px dotted lighten(color(link-hover), 10%);
    outline: none;
  }
  &:hover {
    color: color(link-hover);
    border-bottom: 1px solid lighten(color(link-hover), 10%);
  }
}
strong {
  color: lighten(color(text), 10%);

  a & {
    color: color(link);
  }
}
.label {
  color: color(minor);
  font-style: italic;
  font-size: 0.9em;

  &:after {
    content: ':';
  }
  &.mute:after {
    content: none;
  }
}
.messages {
  @include border-radius;
}
del {
  color: lighten(color(minor), 25%);
}
.field_type--image {
  img {
    @include image-border;
    @include image-fit;
  }
}


// #############################################################################
// Page theme.

.page-level--header {
  background: color(prim);
  color: color(text-invert);

  a {
    @include link-inverted;
  }
  .label {
    color: color(text-invert);
    color: rgba(color(text-invert), 0.7);
  }
}
.page-level--body .page-center {
  background: white;
  padding-bottom: 0;
}
a.site-name {
  &,
  &:hover {
    color: color(text-invert);
    border-color: color(text-invert); // For :focus event.
  }
  &:focus {
    border-color: rgba(color(text-invert), 0.7);
  }
}
.site-tagline {
  color: color(text-invert);
  color: rgba(color(text-invert), 0.7);
}
a.menu-button { // Overqualifying because of link rules to be overridden.
  @include border-radius;

  display: inline-block;
  font-size: 0.9em;
  padding: 0.1em 0.5em 0;
  text-decoration: none;
  text-transform: uppercase;

  &,
  &:hover {
    border: 1px solid color(text-invert);
    border: 1px solid rgba(color(text-invert), 0.8);
    color: color(text-invert);
    color: rgba(color(text-invert),0.9);
  }
  // Come on, .menu-button is for mobile! Yes, but it's so nice.
  &:hover,
  &:focus {
    @include box-shadow(color(link-invert) 0 0 4px 1px);
  }

  &.fixed {
    @include box-shadow(
      $default-box-shadow-color
      0
      1px
      6px
      $default-box-shadow-spread
    );
    @include border-radius(4px);
    @include transition-property(opacity);
    @include transition-duration($transitspeed-mid);

    // Fixing a Chrome bug of flickering fixed elements.
    -webkit-transform: translateZ(0);

    background: color(nav);
    color: color(text-invert);
    // Opaque border would have increased paintwork.
    border-color: color(text-invert);
    bottom: $layout-pad;
    position: fixed;
    right: -10em; // Off-screen.
    opacity: 0; // Only scrolled-in state (see states) will show it.
    z-index: 1000;
  }
}
.content-meta {
  border-top: 1px solid color(border-light);
  border-bottom: 1px solid color(border-light);
}
.region--footer {
  @include border-radius;

  background-color: color(bg);
  margin: 0 -$layout-pad*0.5;
  // Padding bottom is extra room for the fixed menu button.
  padding: $layout-pad*0.5 $layout-pad*0.5 $layout-pad*3;

}
@include breakpoint($bkp-multi-min) {
  .region--footer {
    // The menu button is not being used on multicol-width screens.
    padding-bottom: $layout-pad*0.5;
  }
}


// -----------------------------------------------------------------------------
// Growing screens.
@include breakpoint($layout-page-max-width) {
  .page-level--header {
    // Hack to make sure the shadow doesn't weaken on the left and right ends.
    // Box shadow syntax: $color $hoff $voff $blur $spread $inset
    @include box-shadow(lighten(color(shadow), 10%) 0 -3px 4px 4px);
  }
  .page-level--body .page-center {
    @include box-shadow;
    @include border-radius($default-border-radius*1.5);

    padding-bottom: $layout-pad*0.5;
  }
  .region--footer {
    background-color: color(blockfill);
    margin: 0;
  }
}


// #############################################################################
// Menu themes.

$_menu-color: color(nav);
$_light-color: color(blockfill);

// -----------------------------------------------------------------------------
// Regular menus.

.menu,
.menu ul {
  @include bare-list;

  line-height: 1.2;
}
.nav-format--regular {
  // This is a bit risky setup, but with this very appearance, it might be
  // pulled off.
  @include border-radius;

  background: $_menu-color;
  overflow: hidden;

  ul {
    // Each level of nested menu is darker by this much.
    background: rgba(black,0.15);
  }
  .menu__button {
    @include disable-font-boost;

    border: 1px solid $_menu-color;
    border-top: 1px solid rgba(white,0.15);
    border-bottom: 1px solid rgba(black,0.15);
    color: white;
    position: relative;
    text-decoration: none;

    & > span {
      @include border-radius($default-border-radius*0.75);
      @include box-sizing(border-box);

      // Later we will need it, and don't want it to jump when the border
      // appears. So we put it there now as transparent.
      border: 1px dotted transparent;
      display: inline-block;
      padding: 0.25em 0.33em;
    }
  }
  .menu__link {
    @include transition-property(background-color);
    @include transition-duration($transitspeed-fast);

    display: block;
    padding: $layout-pad*0.3 $layout-pad*0.5;
    position: relative;
    text-shadow: $default-text-shadow;

    & > span {
      @include transition-property(background-color);
      @include transition-duration($transitspeed-fast);

      // Indicator-arrow in inactive state. (Opacity: 0)
      /*&:after {
        @include transition-property(opacity);
        @include transition-duration($transitspeed-fast);

        color: white;
        font-family: monospace;
        font-size: 12px;
        height: 12px;
        line-height: 1;
        margin-top: -6px;
        opacity: 0;
        position: absolute;
        top: 50%;
      }*/
    }
  }
  .menu__static {
    display: block;
    padding: $layout-pad*0.5 $layout-pad*0.5;

    & > span {
      color: color(text-invert);
      color: rgba(color(text-invert),0.7);
      font-size: 0.75em;
      font-style: italic;
      font-weight: 700;
      text-transform: uppercase;

      &:after {
        content: ':';
      }
    }
  }
  .active-trail > .menu__button > span {
    background: rgba(white,0.15);
  }
  .menu__link:focus {
    & > span {
      border-color: rgba(white, 0.5);
    }
  }
  .menu__link:hover {
    @include box-shadow(none);

    background-color: rgba(black,0.1);
    outline: none;

    & > span {
      background-color: rgba(black, 0.15);
      border-color: transparent;
    }
  }
  .menu__link.active > span {
    background-color: rgba(black, 0.15);

    /*&:after {
      opacity: 1;
    }*/
  }
  /*.menu__link:hover > span:after {
    opacity: 0.75;
  }*/
}
// Regular menu's color variants.
.nav-format--regular {
  &.variant--light {
    background: $_light-color;

    ul {
      // Overriding the nested menu levels' darkening, as it doesn't seem to
      // look good here.
      // NOTE: no substitute visual clue was invented in its place.
      background: transparent;
    }
    .menu__static {
      & > span {
        color: color(minor);
        color: rgba(color(text),0.7);
      }
    }
    .menu__button {
      border: 1px solid transparent;
      border-top: 1px solid rgba(white,0.15);
      border-bottom: 1px solid rgba(black,0.07);
      color: darken(color(nav), 10%);
    }
    .menu__link {
      text-shadow: 0 0 4px rgba(white, 0.7);
    }
    .active-trail > .menu__button > span {
      background: rgba(white,0.75);
    }
    .menu__link:focus > span {
      border-color: rgba(color(nav), 0.7);
    }
    .menu__link:hover {
      background-color: rgba(black,0.05);

      & > span {
        background-color: rgba(black, 0.05);
        border-color: transparent;
      }
    }
    .menu__link.active > span {
      background-color: rgba(black, 0.07);
    }
  }
}
// Supplementary indications in menu items (not in use, currently).
.indications--on-right {
  .nav-format--regular {
    /*.menu__link > span:after {
      content: '\25B6'; // Right pointing arrow.
      right: 0.4em;
    }*/
    .menu__button {
      padding-left: $layout-pad*0.5;
      padding-right: $layout-pad*1;
    }
    .depth--2 > .menu__button {
      padding-left: $layout-pad*1.25;
    }
    .depth--3 > .menu__button {
      padding-left: $layout-pad*2;
    }
    .depth--4 > .menu__button {
      padding-left: $layout-pad*2.75;
    }
  }
}
.indications--on-left {
  .nav-format--regular {
    /*.menu__link > span:after {
      content: '\25c0'; // Left pointing arrow.
      left: 0.4em;
    }*/
    .menu__button {
      padding-left: $layout-pad*1;
      padding-right: $layout-pad*0.5;
    }
    .depth--2 > .menu__button {
      padding-left: $layout-pad*1.75;
    }
    .depth--3 > .menu__button {
      padding-left: $layout-pad*2.5;
    }
    .depth--4 > .menu__button {
      padding-left: $layout-pad*3.25;
    }
  }
}


// -----------------------------------------------------------------------------
// Footer menu.
.nav-format--button-row {
  .menu__item {
    display: inline-block;
    margin: 0 $layout-pad*0.25 $layout-pad*0.5;
  }
  .menu__link {
    @include button($size: small, $color: plain-light);
  }
}


// #############################################################################
// Langswitchers.

.langswitch {
  .pretext {
    padding-bottom: $layout-pad*0.5;
  }
  [class*="header_widgets"] & {
    float: right;
  }
  .label {
    text-align: left;

    &.has-icon:before {
      @include icon(main);

      content: '';
      display: inline-block;
      height: 18px;
      margin-right: $layout-pad*0.75;
      position: relative;
      top: -1px;
      vertical-align: middle;
      width: 18px;
    }
  }
  .label.home-page:before {
    background-position: center -190px;
  }
  .label.translations:before {
    background-position: center -210px;
  }
  .label.no-translations:before {
    background-position: center -230px;
  }
}
.langswitch--nav {
  .label.home-page:before {
    background-position: center -250px;
  }
  .label.translations:before {
    background-position: center -270px;
  }
  .label.no-translations:before {
    background-position: center -290px;
  }
}

.locale {
  .flag {
    @include icon(main);

    border: 1px solid color(text-invert);
    border: 1px solid rgba(color(text-invert),0.5);

    // An almost transparent overlay over flags that help to adjust their
    // percieved colors more harmonic to the theme's primary color.
    &:before {
      background-image: linear-gradient(
        135deg,
        transparent,
        rgba(color(prim),0.1),
        rgba(color(prim),0.3)
      );
      bottom: 0;
      content: ' ';
      left: 0;
      position: absolute;
      right: 0;
      top: 0;
    }
  }
}

.locale--primary .flag {
  background-position: center 0;
}
.locale--secondary .flag {
  background-position: center -20px;
}
.langswitch--nav .flag {
  border: 1px solid color(border-mid);
  border: 1px solid rgba(color(border-mid),0.3);
}

a.locale,
a.locale:hover {
  border: none;
}
a.locale:hover .flag,
a.locale:focus .flag {
  @include box-shadow(color(link-invert) 0 0 4px 1px);

  border-color: rgba(color(text-invert), 0.8);
}
// That's the langswitch that got placed into the mobile main menu
// (in the modal).
.langswitch--nav {
  padding: $layout-pad*0.25 0 $layout-pad*0.75;

  a.locale:hover .flag,
  a.locale:focus .flag {
    @include box-shadow(color(nav) 0 0 4px 1px);

    border-color: color(text-invert);
  }
}


// #############################################################################
// In-article styles.

// The appearance (e.g. (bg-)colors) of textboxes could be amended here.
/*
.textbox,
blockquote {

}
.textbox--hero {
  &:before {}
}
.textbox--highlight {
  &:before {}
}
.textbox--note {
  &:before {}
}
.textbox--links {
  &:before {}
}
blockquote {
  &:before {}
}
*/

// <dl>-looking lists in Markdown-authored content.
// Note: I felt more like first-of-type, but ie8.
.defs > ul > li > p:first-child {
  border-bottom: 1px dotted color(border-mid);
  color: lighten(color(text), 10%);
  font-style: italic;
  font-weight: 700;
}


// #############################################################################
// Overlays and modals.

[id="overlay--common"] {
  background: gray;
  background: rgba(black,0.65);
}
[id="modal__content"] {
  @include border-radius;

  background: white;
  max-width: $layout-page-max-width - 200;
  margin: $layout-pad*1.5 $layout-pad $layout-pad;
  position: relative;
}
[id="modal__close"] {
  @include strip-button;
  @include box-shadow;
  @include border-radius(50%);

  background: gray;
  border: 1px solid gray;
  cursor: pointer;
  height: 24px;
  position: absolute;
  right: -12px;
  text-align: center;
  top: -12px;
  width: 24px;
  z-index: 1; // To raise it above the modal's content.

  &:before {
    @include icon(main);

    background-position: center -131px;
    content: '';
    display: block;
    height: 22px;
    width: 22px;
  }
  &:focus {
    @include box-shadow(color(link-invert) 0 0 5px 2px);

    border-color: color(text-invert);
    outline: none;
  }
}

// -----------------------------------------------------------------------------
// Modal variants.
.modal--nav {
  [id="modal__content"] {
    padding: $layout-pad*0.5;
  }
}


// #############################################################################
// Misc.

// NOTE: The throbber is being unfinished.
.throbber {

}
// TODO: shouldn't it be called throbber--global?
.throbber--modal {
  @include border-radius(12px);
  @include box-shadow;
  @include transition-property(opacity);
  @include transition-duration($transitspeed-mid);

  background: color(action);
  border: 2px solid color(text-invert);
  display: block;
  height: 32px;
  left: 50%;
  margin: -12px 0 0 -12px;
  opacity: 0; // Only data-on="true" attribute should show it. See SMACCS_states.
  padding: 2px;
  position: fixed;
  width: 32px;
  top: 50%;
  z-index: 900;

  &:before {
    @include icon(main);

    background-position: center -160px;
    content: ' ';
    display: inline-block;
    height: 24px;
    width: 24px;

    -webkit-animation: spinner 1s linear infinite;
    -moz-animation: spinner 1s linear infinite;
    -ms-animation: spinner 1s linear infinite;
    -o-animation: spinner 1s linear infinite;
    animation: spinner 1s linear infinite;
  }
}

@-webkit-keyframes spinner {
  100% {
    @include transform(rotate(360deg));
  }
}
@-moz-keyframes spinner {
  100% {
    @include transform(rotate(360deg));
  }
}
@-ms-keyframes spinner {
  100% {
    @include transform(rotate(360deg));
  }
}
@-o-keyframes spinner {
  100% {
    @include transform(rotate(360deg));
  }
}
@keyframes spinner {
  100% {
    @include transform(rotate(360deg));
  }
}


// #############################################################################
// Sprite prefetching for UI elements that appear only @ user interaction.

// (On mobile, the sprite-needing modal-elements only come out of display: none;
//  when the modal is activated. That's too late to request the sprite.)
// See:
// http://css-tricks.com/snippets/css/css-only-image-preloading/
// Note: link rel="prefetch" is not good enough, this is IMO better.

.jump-links { // Unsuspecting irrelevant element.
  @include icon(main);

  background-position: -9999px -9999px;
}
